<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="7" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-25T00:34:30 IST" name="Suite" finished-at="2024-05-25T00:35:39 IST" duration-ms="69112">
    <groups>
      <group name="Purchase">
        <method signature="LoginPageScript.SubmitOrder(java.util.HashMap)[pri:0, instance:test.LoginPageScript@9cb8225]" name="SubmitOrder" class="test.LoginPageScript"/>
      </group> <!-- Purchase -->
      <group name="errorHandling">
        <method signature="ErrorValidation.loginError()[pri:0, instance:test.ErrorValidation@463fd068]" name="loginError" class="test.ErrorValidation"/>
      </group> <!-- errorHandling -->
    </groups>
    <test started-at="2024-05-25T00:34:30 IST" name="Error validarion Test" finished-at="2024-05-25T00:35:17 IST" duration-ms="46789">
      <class name="test.ErrorValidation">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:test.ErrorValidation@463fd068]" started-at="2024-05-25T00:34:31 IST" name="launchApplication" finished-at="2024-05-25T00:34:42 IST" duration-ms="11880" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="loginError()[pri:0, instance:test.ErrorValidation@463fd068]" started-at="2024-05-25T00:34:42 IST" name="loginError" finished-at="2024-05-25T00:34:46 IST" duration-ms="3699" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid login message is not displayed. expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid login message is not displayed. expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at test.ErrorValidation.loginError(ErrorValidation.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginError -->
        <test-method is-config="true" signature="closeWindow()[pri:0, instance:test.ErrorValidation@463fd068]" started-at="2024-05-25T00:34:46 IST" name="closeWindow" finished-at="2024-05-25T00:34:46 IST" duration-ms="310" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeWindow -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:test.ErrorValidation@463fd068]" started-at="2024-05-25T00:34:46 IST" name="launchApplication" finished-at="2024-05-25T00:34:51 IST" duration-ms="4965" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginError()[pri:0, instance:test.ErrorValidation@463fd068]" started-at="2024-05-25T00:34:51 IST" name="loginError" finished-at="2024-05-25T00:34:52 IST" duration-ms="1090" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid login message is not displayed. expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid login message is not displayed. expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at test.ErrorValidation.loginError(ErrorValidation.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginError -->
        <test-method is-config="true" signature="closeWindow()[pri:0, instance:test.ErrorValidation@463fd068]" started-at="2024-05-25T00:34:53 IST" name="closeWindow" finished-at="2024-05-25T00:34:54 IST" duration-ms="598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeWindow -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:test.ErrorValidation@463fd068]" started-at="2024-05-25T00:34:54 IST" name="launchApplication" finished-at="2024-05-25T00:34:56 IST" duration-ms="2465" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="productError()[pri:0, instance:test.ErrorValidation@463fd068]" started-at="2024-05-25T00:34:56 IST" name="productError" finished-at="2024-05-25T00:35:17 IST" duration-ms="20689" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productError -->
        <test-method is-config="true" signature="closeWindow()[pri:0, instance:test.ErrorValidation@463fd068]" started-at="2024-05-25T00:35:17 IST" name="closeWindow" finished-at="2024-05-25T00:35:17 IST" duration-ms="309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeWindow -->
      </class> <!-- test.ErrorValidation -->
    </test> <!-- Error validarion Test -->
    <test started-at="2024-05-25T00:34:30 IST" name="Submit order Test" finished-at="2024-05-25T00:35:39 IST" duration-ms="69112">
      <class name="test.LoginPageScript">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:test.LoginPageScript@9cb8225]" started-at="2024-05-25T00:34:31 IST" name="launchApplication" finished-at="2024-05-25T00:34:47 IST" duration-ms="15260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="SubmitOrder(java.util.HashMap)[pri:0, instance:test.LoginPageScript@9cb8225]" started-at="2024-05-25T00:34:47 IST" name="SubmitOrder" data-provider="getData" finished-at="2024-05-25T00:35:08 IST" duration-ms="21021" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Anjali@123, product=ADIDAS ORIGINAL, email=anjaliniks@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SubmitOrder -->
        <test-method is-config="true" signature="closeWindow()[pri:0, instance:test.LoginPageScript@9cb8225]" started-at="2024-05-25T00:35:08 IST" name="closeWindow" finished-at="2024-05-25T00:35:08 IST" duration-ms="724" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeWindow -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:test.LoginPageScript@9cb8225]" started-at="2024-05-25T00:35:08 IST" name="launchApplication" finished-at="2024-05-25T00:35:11 IST" duration-ms="2587" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="SubmitOrder(java.util.HashMap)[pri:0, instance:test.LoginPageScript@9cb8225]" started-at="2024-05-25T00:35:11 IST" name="SubmitOrder" data-provider="getData" finished-at="2024-05-25T00:35:32 IST" duration-ms="21491" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Aayush@123, product=ZARA COAT 3, email=Aayush@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SubmitOrder -->
        <test-method is-config="true" signature="closeWindow()[pri:0, instance:test.LoginPageScript@9cb8225]" started-at="2024-05-25T00:35:32 IST" name="closeWindow" finished-at="2024-05-25T00:35:33 IST" duration-ms="326" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeWindow -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:test.LoginPageScript@9cb8225]" started-at="2024-05-25T00:35:33 IST" name="launchApplication" finished-at="2024-05-25T00:35:36 IST" duration-ms="3640" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="OrderHistory()[pri:0, instance:test.LoginPageScript@9cb8225]" started-at="2024-05-25T00:35:36 IST" name="OrderHistory" finished-at="2024-05-25T00:35:38 IST" depends-on-methods="test.LoginPageScript.SubmitOrder" duration-ms="1103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistory -->
        <test-method is-config="true" signature="closeWindow()[pri:0, instance:test.LoginPageScript@9cb8225]" started-at="2024-05-25T00:35:38 IST" name="closeWindow" finished-at="2024-05-25T00:35:39 IST" duration-ms="1907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeWindow -->
      </class> <!-- test.LoginPageScript -->
    </test> <!-- Submit order Test -->
  </suite> <!-- Suite -->
</testng-results>
